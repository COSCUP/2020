{"version":3,"sources":["webpack:///./src/pages/Staff.vue","webpack:///./src/pages/Staff.vue?4852","webpack:///./src/pages/Staff.vue?3ea9"],"names":["id","class","staffData","group","key","tid","languagePack","staff","groups","staffs","name","src","email_hash","alt","setup","groupSequence","sort","a","b","indexOf","map","chiefs","chief","isChief","members","dispatchRenderedEvent","render"],"mappings":"uJAQQA,GAAG,QAAQC,MAAM,kB,GAMVA,MAAM,a,GACTA,MAAM,c,GAGLA,MAAM,iB,GASFA,MAAM,wB,GACJA,MAAM,0B,gDApBvB,eAiCO,OAjCP,EAiCO,E,mBAhCL,eA+BM,2BA9BY,EAAAC,WAAS,SAAlBC,G,wBADT,eA+BM,OA7BHC,IAAG,sBAAiBD,EAAME,KAC3BJ,MAAM,qB,CAEN,eAyBU,UAzBV,EAyBU,CAxBR,eAEK,KAFL,EAEK,eADA,EAAAK,aAAaC,MAAMC,OAAOL,EAAME,MAAG,GAExC,eAoBM,MApBN,EAoBM,E,mBAnBJ,eAkBM,2BAjBYF,EAAMM,QAAM,SAArBF,G,wBADT,eAkBM,OAhBHH,IAAG,UAAKD,EAAME,IAAX,YAAkBE,EAAMG,MAC5BT,MAAK,CAAC,QAAO,C,MACkB,EAAM,W,CAIrC,eAQM,MARN,EAQM,CAPJ,eAMM,MANN,EAMM,CALJ,eAIE,OAHAA,MAAM,eACLU,IAAG,0CAAqCJ,EAAMK,WAA3C,0BACHC,IAAG,UAAKN,EAAMG,KAAX,c,0BAIV,eAAuB,wBAAjBH,EAAMG,MAAI,I,6HC5Bb,iBAAgB,CAC7BA,KAAM,QACNI,MAF6B,WAExB,MACsB,iBAAjBR,EADL,EACKA,aACFJ,EAAY,gBAAS,WACzB,IAAMa,EAAgB,CAAC,cAAe,YAAa,UAAW,QAAS,UAAW,KAAM,YAAa,QAAS,UAAW,aACzH,OAAO,EACJC,MAAK,SAACC,EAAGC,GAAJ,OAAUH,EAAcI,QAAQF,EAAEZ,KAAOU,EAAcI,QAAQD,EAAEb,QACtEe,KAAI,SAACjB,GACJ,MAAO,CACLE,IAAKF,EAAME,IACXK,KAAMP,EAAMO,KACZD,OAAQ,GAAF,sBACDN,EAAMkB,OAAOD,KAAI,SAACE,GAAD,sBAAC,kBAAgBA,GAAjB,IAAwBC,SAAS,QADjD,eAEDpB,EAAMqB,QAAQJ,KAAI,SAACE,GAAD,sBAAC,kBAAgBA,GAAjB,IAAwBC,SAAS,gBAM1DE,EAAwB,iBAM9B,OAJA,gBAAU,WACRA,OAGK,CACLnB,eACAJ,gBCjCN,EAAOwB,OAASA,EAED,gB","file":"js/staff.849a5044.js","sourcesContent":["<!--\n  Copyright (c) 2020 DevilTea\n\n  This software is released under the MIT License.\n  https://opensource.org/licenses/MIT\n-->\n\n<template>\n  <main id=\"staff\" class=\"page-container\">\n    <div\n      v-for=\"group in staffData\"\n      :key=\"`staff-group-${group.tid}`\"\n      class=\"group-box-wrapper\"\n    >\n      <section class=\"group-box\">\n        <h2 class=\"group-name\">\n          {{ languagePack.staff.groups[group.tid] }}\n        </h2>\n        <div class=\"staff-wrapper\">\n          <div\n            v-for=\"staff in group.staffs\"\n            :key=\"`${group.tid}-${staff.name}`\"\n            class=\"staff\"\n            :class=\"{\n              chief: staff.isChief,\n            }\"\n          >\n            <div class=\"staff-avatar-wrapper\">\n              <div class=\"staff-avatar-container\">\n                <img\n                  class=\"staff-avatar\"\n                  :src=\"`https://www.gravatar.com/avatar/${staff.email_hash}?s=320&d=identicon&r=g`\"\n                  :alt=\"`${staff.name}'s Avatar`\"\n                />\n              </div>\n            </div>\n            <p>{{ staff.name }}</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  </main>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from 'vue'\nimport _staffData from '@/../public/json/staff.json'\nimport { useRenderedEventDispatcher } from '@/plugins/renderedEventDispatcher'\n\nimport '@/assets/scss/pages/staff.scss'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  name: 'Staff',\n  setup () {\n    const { languagePack } = useStore()\n    const staffData = computed(() => {\n      const groupSequence = ['coordinator', 'secretary', 'program', 'field', 'finance', 'it', 'marketing', 'photo', 'sponsor', 'streaming']\n      return _staffData\n        .sort((a, b) => groupSequence.indexOf(a.tid) - groupSequence.indexOf(b.tid))\n        .map((group) => {\n          return {\n            tid: group.tid,\n            name: group.name,\n            staffs: [\n              ...group.chiefs.map((chief) => ({ ...chief, isChief: true })),\n              ...group.members.map((chief) => ({ ...chief, isChief: false }))\n            ]\n          }\n        })\n    })\n\n    const dispatchRenderedEvent = useRenderedEventDispatcher()\n\n    onMounted(() => {\n      dispatchRenderedEvent()\n    })\n\n    return {\n      languagePack,\n      staffData\n    }\n  }\n})\n</script>\n","\nimport { defineComponent, computed, onMounted } from 'vue'\nimport _staffData from '@/../public/json/staff.json'\nimport { useRenderedEventDispatcher } from '@/plugins/renderedEventDispatcher'\n\nimport '@/assets/scss/pages/staff.scss'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  name: 'Staff',\n  setup () {\n    const { languagePack } = useStore()\n    const staffData = computed(() => {\n      const groupSequence = ['coordinator', 'secretary', 'program', 'field', 'finance', 'it', 'marketing', 'photo', 'sponsor', 'streaming']\n      return _staffData\n        .sort((a, b) => groupSequence.indexOf(a.tid) - groupSequence.indexOf(b.tid))\n        .map((group) => {\n          return {\n            tid: group.tid,\n            name: group.name,\n            staffs: [\n              ...group.chiefs.map((chief) => ({ ...chief, isChief: true })),\n              ...group.members.map((chief) => ({ ...chief, isChief: false }))\n            ]\n          }\n        })\n    })\n\n    const dispatchRenderedEvent = useRenderedEventDispatcher()\n\n    onMounted(() => {\n      dispatchRenderedEvent()\n    })\n\n    return {\n      languagePack,\n      staffData\n    }\n  }\n})\n","import { render } from \"./Staff.vue?vue&type=template&id=236bf888&bindings={}\"\nimport script from \"./Staff.vue?vue&type=script&lang=ts\"\nexport * from \"./Staff.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}